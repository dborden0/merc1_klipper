[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include OrbiterSensor.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Line_Purge.cfg]
[include ./KAMP/Smart_Park.cfg]
[include OrbitoolO2.cfg]

# This file contains common pin mappings for the BigTreeTech Octopus.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.

# Modifiers to Mainsail Macros
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 185   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 300   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 185  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 300  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 3600   ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored (1 Hour)
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_CA4440545154354D38202020FF0A373B-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 43.15 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
home_method: contact                # use proximity for induction homing
home_method_when_homed: proximity   # after initial calibration use induction
home_autocalibrate: unhomed         # contact will calibrate beacon on first home
contact_max_hotend_temperature: 180 # increase to probe at print temps
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 100
home_xy_position: 185, 185
autocal_tolerance: 0.008
autocal_max_retries: 15

# new autocalibration config options
#autocal_speed: 3
autocal_speed: 3
# Speed during contact movement. Probing outside of 2-5mm/s not recommended and at your own risk.
#autocal_accel: 100
# Acceleration of autocal movement.
#autocal_retract_dist: 2
# Retract distance between autocal samples.
#autocal_retract_speed: 10
# Speed of autocal retraction move.
#autocal_sample_count: 3
# Number of samples used for each autocal.
#autocal_tolerance: 0.008
# Acceptance tolerance for an autocal result.
#autocal_max_retries: 3
# Number of retry attempts permitted when tolerance is exceeded.



[resonance_tester]
accel_chip: beacon
probe_points: 185, 185, 20
min_freq: 40

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 10000
max_z_velocity: 10
max_z_accel: 100
# max_accel_to_decel: defaults to half max_accel

# Driver0
[stepper_x]
# rotation_distance = <full_steps_per_rotation> * <microsteps> * <step_distance>
# rotation_distance = 200 * 16 * <step_distance>
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
# endstop_pin: PG6
endstop_pin: !orbitoolO2:PB0
position_endstop: -2
position_min: -2
position_max: 370
homing_speed: 100

# Driver1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: PG9
position_endstop: 370
position_max: 400
homing_speed: 100

# Driver2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_max: 400
position_min: -5.00
homing_speed: 10.0
homing_retract_dist: 0 # beacon needs this to be set to 0

# Driver3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop

[extruder]
step_pin = orbitoolO2:PB7
dir_pin = orbitoolO2:PB6 #orbiter 2
enable_pin = !orbitoolO2:PB4
microsteps = 32
rotation_distance = 4.69 # Orbiter v2
#rotation_distance = 2.18 # Orbiter quatro
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = orbitoolO2:PA0
sensor_pin = orbitoolO2:PA3
pullup_resistor = 2200
sensor_type = PT1000
min_temp = 0
max_temp = 300 # hotend speciffic
pressure_advance = 0.02
pressure_advance_smooth_time = 0.03
max_extrude_only_distance = 500.0
max_extrude_cross_section = 20
min_extrude_temp = 180
# min_extrude_temp = 20
smooth_time = 0.5
max_power: 0.995 # limit heater power to 99.5% to enable autorecovery from short detection
pwm_cycle_time: 0.00500
control = pid


[heater_bed]
heater_pin: PA2
sensor_pin: PF3 # TB
sensor_type: EPCOS 100K B57560G104F
min_temp: 0
max_temp: 130


# CPAP Fan
[fan]
pin: PA8
max_power: 0.8 
# This should be set to 0.8 on most motherboards to give full range of control to your slicer. 
# Anything above 80% duty cycle will be full power on this particular brushless driver.
# To fine-tune the max_power parameter for your particular motherboard, set max_power to 1.0, go into the Klipper dashboard, and increase fan speed 1% at a time until the actual fan speed stops increasing as you increase the fan speed. Divide the fan speed at this point by 100 and enter it into the max_power parameter.
# This parameter defines the maximum power (expressed as a value from 0.0 to 1.0) that the pin may be set to. 
# The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5 would allow the pin to be enabled for no more than half the time. 
# This setting may be used to limit the total power output (over extended periods) to the fan. 
# If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).

shutdown_speed: 0 
# The desired fan speed (expressed as a value from 0.0 to 1.0) if 
# The microcontroller software enters an error state. 
# The default is 0.

cycle_time: 0.005 
# The amount of time (in seconds) for each PWM power cycle to the fan. 
# It is recommended this be 10 milliseconds or greater when using software-based PWM. 
# The default is 0.010 seconds.

hardware_pwm: False 
# Enable this to use hardware PWM instead of software PWM. 
# Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 
# When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 
# The default is False.

kick_start_time: 0.100 
# Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 
# The default is 0.100 seconds.

off_below: 0.1 
# The blower will not spin with the included brushless driver when the duty cycle is below 8%. When scaled with Max_power at 0.8, the off_below parameter should be set to 0.1. 
# To calibrate this setting, gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 8% -> 0.08/Max_power -> 0.08/0.8 -> 0.1) or slightly higher. 
# This parameter is the minimum input speed that will power the fan (expressed as a value from 0.0 to 1.0). 
# When a speed lower than off_below is requested, the fan will instead be turned off. 
# This setting may be used to prevent fan stalls and to ensure effective kick starts. 
# To calibrate this setting, start with off_below set to 0.0 and the fan spinning. 
# Gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 12% -> 0.12) or slightly higher.

#Tachometer_pin:
# Tachometer input pin for monitoring fan speed. A pullup is generally required. 
# This parameter is optional.
#Tachometer_ppr: 1
# When tachometer_pin is specified, this is the number of pulses per revolution of the tachometer signal.
#Tachometer_poll_interval: 0.0005
# When tachometer_pin is specified, this is the polling period of the tachometer pin, in seconds. 
# The default is 0.0015, which is fast enough for fans below 10,000 RPM at 2 PPR. 
# This must be smaller than 30/(tachometer_ppr*rpm), with some margin, where rpm is the 
# maximum speed (in RPM) of the fan.

# # Nozzle Fan
# [heater_fan fan1]
# pin: PE5
# heater_temp: 50.0
# # max_power: 1.0
# fan_speed: 1.0

[heater_fan fan2]
pin: PD12
heater_temp: 50.0
fan_speed: 1.0

# Turn on stepper fans whenever heater is above 50C
[heater_fan fan3]
pin: PD13
heater_temp: 50.0
fan_speed: 1.0
# idle_speed: 0
# idle_timeout: 300
# stepper: stepper_x, stepper_y, stepper_z, stepper_z1, extruder

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_420012000A50534E4E313120-if00
# serial: /dev/ttyAMA0
# CAN bus is also available on this board

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
run_current: 1.13
# run_current: 1.3
interpolate: False

[tmc2209 stepper_y]
uart_pin: PD11
run_current: 1.13
# run_current: 1.3
interpolate: False

[tmc2209 stepper_z]
uart_pin: PC6
run_current: 0.650
#run_current: 0.48
hold_current: 0.450
interpolate: False

[tmc2209 stepper_z1]
uart_pin: PC7
run_current: 0.650
#run_current: 0.48
hold_current: 0.450
interpolate: False

[tmc2209 extruder]
uart_pin: orbitoolO2:PB5
# Old config interpolate was true
interpolate = False  
run_current = 0.8 # Orbiter 2
#run_current = 0.6 # Orbiter quatro
#hold_current = 0.100
sense_resistor = 0.11
stealthchop_threshold = 0

# [firmware_retraction]
# retract_length: 1.2
# #   The length of filament (in mm) to retract when G10 is activated,
# #   and to unretract when G11 is activated (but see
# #   unretract_extra_length below). The default is 0 mm.
# retract_speed: 120
# #   The speed of retraction, in mm/s. The default is 20 mm/s.
# unretract_extra_length: 0.0
# #   The length (in mm) of *additional* filament to add when
# #   unretracting.
# unretract_speed: 120
# #   The speed of unretraction, in mm/s. The default is 10 mm/s.


# **Very important note!!! Please make sure the sense resistor is set
# according to what yuu have on board. TMC2208 and
# TMS2209 usually have 0.11 ohm, TMC2660 have 0.051 Ohm and
# TMC5160 have usually 0.075 ohm.
# As an example if you set by mistake the sense resistor to 0.11 instead of
# 0.051 the real current of the motor will be more than double, and the
# power injected in the motor more than four time higher, yes you read it
# correctly FOUR - AKA 4 times higher. 0.85A shall give a power loss of
# about 3W doubling the current will lead to 12W - this will melt all the
# plastic gearset before you notice something is wrong.
# How you can identify the sense resistor? It's pretty easy, look for two
# identical resistors which are bigger than all the others onboard or
# around the stepper driver. See the examples in the next pictures.

[gcode_arcs]
resolution: 0.1

[axis_twist_compensation]
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position.
calibrate_end_x: 350
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position.
calibrate_y: 112.5
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter is recommended to
#   be near the center of the bed

# For Y-axis twist compensation, specify the following parameters:
calibrate_start_y: 20
#   Defines the minimum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the starting
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
calibrate_end_y: 350
#   Defines the maximum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the ending
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
calibrate_x: 185
#   Defines the X coordinate of the calibration for Y axis twist compensation
#   This should be the X coordinate that positions the nozzle during the
#   calibration process for Y axis twist compensation. This parameter must be
#   provided and is recommended to be near the center of the bed.

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5


[bed_screws]
screw1: 15,37
screw2: 315,37
screw3: 315,298
screw4: 15,298

[screws_tilt_adjust]
screw1: 65,37
screw1_name: front left screw
screw2: 330,37
screw2_name: front right screw
screw3: 330,298
screw3_name: rear right screw
screw4: 65,298
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 200
screw_thread: CW-M4

[bed_mesh]
speed: 600
# horizontal_move_z: 5
# mesh_min: 15, 58
# mesh_max: 345, 305
mesh_min: 35, 78
mesh_max: 325, 285
zero_reference_position: 185, 185
probe_count: 30, 30
algorithm: bicubic
#fade_start: 1
#fade_end: 0
#fade_target: 0
# move_check_distance: 5
# split_delta_z: 0.025

[z_tilt]
z_positions: 
	390, 200
    -20, 200

# A list of X,Y coordinates (one per line; subsequent lines
# indented) describing the location of each bed "pivot point". The
# "pivot point" is the point where the bed attaches to the given Z
# stepper. It is described using nozzle coordinates (the XY position
# of the nozzle if it could move directly above the point). The
# first entry corresponds to stepper_z, the second to stepper_z1,
# the third to stepper_z2, etc. This parameter must be provided.
points: 
    360, 200
    50, 200

# A list of X,Y coordinates (one per line; subsequent lines | back |
# indented) that should be probed during a Z_TILT_ADJUST command. | |
# Specify coordinates of the nozzle and be sure the probe is above L z1 z R
# the bed at the given nozzle coordinates. This parameter must be | |
# provided. | front |
speed: 200
horizontal_move_z: 4.5
retries: 15
# Number of times to retry if the probed points aren't within
# tolerance.
retry_tolerance: 0.005
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

# [auto_speed]
#axis: diag_x, diag_y  ; One or multiple of `x`, `y`, `diag_x`, `diag_y`, `z`

#margin: 20            ; How far away from your axes to perform movements

#settling_home: 1      ; Perform settling home before starting Auto Speed
#max_missed: 1.0       ; Maximum full steps that can be missed
#endstop_samples: 3    ; How many endstop samples to take for endstop variance

#accel_min: 1000.0     ; Minimum acceleration test may try
#accel_max: 50000.0    ; Maximum acceleration test may try
#accel_accu: 0.05      ; Keep binary searching until the result is within this percentage

#velocity_min: 50.0    ; Minimum velocity test may try
#velocity_max: 5000.0  ; Maximum velocity test may try
#velocity_accu: 0.05   ; Keep binary searching until the result is within this percentage

#derate: 0.8           ; Derate discovered results by this amount

#validate_margin: Unset      ; Margin for VALIDATE, Defaults to margin
#validate_inner_margin: 20.0 ; Margin for VALIDATE inner pattern
#validate_iterations: 50     ; Perform VALIDATE pattern this many times

#results_dir: ~/printer_data/config ; Destination directory for graphs

# AUTO SPEED found recommended acceleration and velocity after 171.02s
# | DIAG X max: a25962 v462
# | DIAG Y max: a27612 v462
# Recommended accel: 25962
# Recommended velocity: 462


[virtual_sdcard]
path: ~/printer_data/gcodes

# [shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[display_status]

##########################
# Mainsail Customization #
##########################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[exclude_object]

# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#     TURN_OFF_HEATERS
#     CANCEL_PRINT_BASE

######################################################################
# Clean Nozzle
######################################################################
[gcode_macro clean_nozzle]
gcode:
  {% set wipe_count = 8 %}
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(307, 362),(339, 362)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} F6000
    {% endfor %}
  {% endfor %}
  G0 X300
  RESTORE_GCODE_STATE NAME=clean_nozzle_state

[force_move]
enable_force_move: True

######################################################################
# Clean Nozzle
######################################################################
[gcode_macro clean_nozzle_no_z]
gcode:
  SET_KINEMATIC_POSITION Z=0
  {% set wipe_count = 8 %}
  G90
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(307, 362),(339, 362)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} F6000
    {% endfor %}
  {% endfor %}
  
  

  
######################################################################
# Start Print and End Print
######################################################################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    # Initial tool number (for use with ERCF)
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}

    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0  ; beacon touch example

    # Home X and Y and move nozzle to middle of the build plate
    G28 X Y 
    G0 X185 Y185 F6000
    # Start heating the bed
    M140 S{BED_TEMP}
    M109 S150       ; preheat nozzle to probing temp - Added for beacon touch
    
    # Reset feed rate and flow rate.
    G90
    M220 S100
    M221 S100

    
    # Home the printer
    G28 Z METHOD=CONTACT ; TODO see if this is faster
    G0 Z2   ; position beacon at 2mm for heat soak

    # Wait for bed to come up to temperature
    M190 S{BED_TEMP} 
    # G4 P60000       ; optional, let temps settle for 1 min
    clean_nozzle
    G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
    # Z_TILT_ADJUST PROBE_METHOD=contact
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode
    
    clean_nozzle
    G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh
        
    # Start heating the extruder now so it is ready about the time the bed mesh is finished
    M104 S{EXTRUDER_TEMP} T0
    
        
    # Park toolhead close to print
    SMART_PARK

    # Wait for hotend to be at the correct temps
    M109 S{EXTRUDER_TEMP} T0

    SET_GCODE_OFFSET Z=0.06     ; add a little offset for hotend thermal expansion
                            ; needs fine tuning, long meltzones require more
    # SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer

    LINE_PURGE ; purge nozzle


[gcode_macro END_PRINT]
gcode:
  {% set unload = params.UNLOAD_AT_END | default(1) | int %}
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
  
  # Relative positioning
  G91 
  # Retract a bit
  G1 E-2 F2700 
  # Retract and raise Z
  G1 E-10 F2400 ; Increased extruder retract to prevent ozzing
  # Wipe out
  G1 X5 Y5 F3000 
  # Raise Z more
  G1 Z10 
  
  # Absolute positioning
  G90 
  
  # Present print ; nozzle wipe moves it out of the way now
  # G1 Z{printer.toolhead.position.z + 10} F600
  # G1 X{X_MAX / 2} Y{Y_MAX - 50} F6000

  # Unload
  # MMU_EJECT
  
  # Turn-off fan
  M106 S0 
  # Turn-off hotend
  M104 S0 
  # Turn-off bed
  M140 S0 

  CLEAN_NOZZLE
  CLEAN_NOZZLE
  G1 E-5 F2400 ; Increased extruder retract to prevent ozzing
  CLEAN_NOZZLE

  # Move bed back up
  G1 Z2
  
  # Disable all steppers but Z
  M84 X Y E

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# pid_kp = 22.192
#*# pid_ki = 1.608
#*# pid_kd = 76.565
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.419
#*# pid_ki = 0.810
#*# pid_kd = 1403.148
#*#
#*# [input_shaper]
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 80.4
#*# shaper_type_x = mzv
#*# shaper_freq_x = 63.4
#*#
#*# [beacon model default]
#*# model_coef = 1.6596971770630535,
#*# 	  2.0557935661647355,
#*# 	  0.8310892191796054,
#*# 	  0.2773559499109706,
#*# 	  0.028360276208277628,
#*# 	  -0.04143325405414765,
#*# 	  0.0019194737146175347,
#*# 	  0.1172694535237429,
#*# 	  0.08000590971995333,
#*# 	  -0.006222321051163754
#*# model_domain = 1.8918561888526095e-07,1.9447159507108286e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 20.624486
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.076285, 0.067979, 0.058169, 0.049457, 0.044692, 0.043477, 0.046942, 0.053257, 0.057701, 0.062591, 0.067958
#*# 	0.073003, 0.064897, 0.055448, 0.046679, 0.039402, 0.038079, 0.041003, 0.047455, 0.053278, 0.058403, 0.062454
#*# 	0.072424, 0.064268, 0.053802, 0.045124, 0.038902, 0.036153, 0.040072, 0.045408, 0.051623, 0.056162, 0.060216
#*# 	0.070696, 0.063385, 0.053169, 0.043159, 0.035871, 0.034504, 0.038224, 0.043992, 0.049698, 0.053982, 0.058509
#*# 	0.064919, 0.058157, 0.050481, 0.037041, 0.029481, 0.027191, 0.031227, 0.039289, 0.042431, 0.046343, 0.050895
#*# 	0.055535, 0.050348, 0.042097, 0.031857, 0.023082, 0.020317, 0.025659, 0.031528, 0.036612, 0.042235, 0.044822
#*# 	0.044932, 0.039534, 0.033120, 0.020266, 0.012345, 0.009445, 0.014633, 0.022965, 0.027486, 0.031314, 0.036506
#*# 	0.033796, 0.025886, 0.018231, 0.006797, -0.000352, -0.003331, 0.002139, 0.010812, 0.016172, 0.020692, 0.024356
#*# 	0.021165, 0.012710, 0.003252, -0.007669, -0.013074, -0.014634, -0.009317, -0.001468, 0.004303, 0.008854, 0.012304
#*# 	0.008308, -0.000407, -0.010757, -0.020238, -0.023325, -0.025740, -0.021197, -0.012591, -0.007578, -0.003961, 0.000660
#*# 	-0.004639, -0.013364, -0.023200, -0.031825, -0.035540, -0.036571, -0.032592, -0.026216, -0.020308, -0.014020, -0.008614
#*# 	-0.013472, -0.024556, -0.035762, -0.043652, -0.046561, -0.046690, -0.042906, -0.036123, -0.029199, -0.020846, -0.012509
#*# 	-0.013677, -0.025857, -0.037517, -0.045729, -0.048357, -0.048254, -0.043736, -0.035714, -0.025527, -0.016285, -0.005398
#*# 	-0.003269, -0.016269, -0.030888, -0.039669, -0.042500, -0.042708, -0.036947, -0.027906, -0.015207, -0.003586, 0.005807
#*# x_count = 11
#*# y_count = 14
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 132.65
#*# max_x = 232.35
#*# min_y = 138.41
#*# max_y = 226.59
#*#
#*# [axis_twist_compensation]
#*# z_compensations = 0.003408, -0.021273, 0.017865
#*# compensation_start_x = 20.0
#*# compensation_end_x = 350.0
